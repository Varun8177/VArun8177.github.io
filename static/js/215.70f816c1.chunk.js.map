{"version":3,"file":"static/js/215.70f816c1.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/button/src/icon-button.tsx","../node_modules/@chakra-ui/icon/dist/chunk-DKFDJSXF.mjs","../node_modules/@chakra-ui/icons/dist/chunk-PHCA2RMO.mjs","../node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx","../node_modules/@chakra-ui/menu/src/menu-command.tsx","../node_modules/@chakra-ui/menu/src/styled-menu-item.tsx","../node_modules/@chakra-ui/menu/src/menu-icon.tsx","../node_modules/@chakra-ui/menu/src/menu-item.tsx","../node_modules/@chakra-ui/menu/src/menu-list.tsx","../node_modules/@chakra-ui/clickable/src/use-clickable.ts","../node_modules/@chakra-ui/clickable/src/use-event-listeners.ts","../node_modules/@chakra-ui/descendant/src/utils.ts","../node_modules/@chakra-ui/descendant/src/descendant.ts","../node_modules/@chakra-ui/descendant/src/use-descendant.ts","../node_modules/@chakra-ui/dom-utils/dist/chunk-ROURZMX4.mjs","../node_modules/@chakra-ui/react-use-focus-effect/src/index.ts","../node_modules/@chakra-ui/react-use-outside-click/src/index.ts","../node_modules/@chakra-ui/menu/src/use-menu.ts","../node_modules/@chakra-ui/react-use-animation-state/src/index.ts","../node_modules/@chakra-ui/menu/src/use-shortcut.ts","../node_modules/@chakra-ui/menu/src/get-next-item-from-search.ts","../node_modules/@chakra-ui/lazy-utils/dist/index.mjs","../node_modules/@chakra-ui/menu/src/menu.tsx","../node_modules/@chakra-ui/menu/src/menu-button.tsx"],"sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport { cloneElement, isValidElement } from \"react\"\nimport { Button, ButtonProps } from \"./button\"\n\ntype OmittedProps =\n  | \"leftIcon\"\n  | \"rightIcon\"\n  | \"loadingText\"\n  | \"iconSpacing\"\n  | \"spinnerPlacement\"\n\ninterface BaseButtonProps extends Omit<ButtonProps, OmittedProps> {}\n\nexport interface IconButtonProps extends BaseButtonProps {\n  /**\n   * The icon to be used in the button.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * If `true`, the button will be perfectly round. Else, it'll be slightly round\n   *\n   * @default false\n   */\n  isRound?: boolean\n  /**\n   * A11y: A label that describes the button\n   */\n  \"aria-label\": string\n}\n\n/**\n * Icon button renders an icon within a button.\n *\n * @see Docs https://chakra-ui.com/docs/components/icon-button\n */\nexport const IconButton = forwardRef<IconButtonProps, \"button\">(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props\n\n    /**\n     * Passing the icon as prop or children should work\n     */\n    const element = icon || children\n    const _children = isValidElement(element)\n      ? cloneElement(element as any, {\n          \"aria-hidden\": true,\n          focusable: false,\n        })\n      : null\n\n    return (\n      <Button\n        padding=\"0\"\n        borderRadius={isRound ? \"full\" : undefined}\n        ref={ref}\n        aria-label={ariaLabel}\n        {...rest}\n      >\n        {_children}\n      </Button>\n    )\n  },\n)\n\nIconButton.displayName = \"IconButton\"\n","// src/icon.tsx\nimport {\n  chakra,\n  forwardRef,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar fallbackIcon = {\n  path: /* @__PURE__ */ jsxs(\"g\", { stroke: \"currentColor\", strokeWidth: \"1.5\", children: [\n    /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        strokeLinecap: \"round\",\n        fill: \"none\",\n        d: \"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n      }\n    ),\n    /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fill: \"currentColor\",\n        strokeLinecap: \"round\",\n        d: \"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n      }\n    ),\n    /* @__PURE__ */ jsx(\"circle\", { fill: \"none\", strokeMiterlimit: \"10\", cx: \"12\", cy: \"12\", r: \"11.25\" })\n  ] }),\n  viewBox: \"0 0 24 24\"\n};\nvar Icon = forwardRef((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-icon\", className);\n  const customStyles = useStyleConfig(\"Icon\", props);\n  const styles = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles\n  };\n  const shared = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles\n  };\n  const _viewBox = viewBox != null ? viewBox : fallbackIcon.viewBox;\n  if (element && typeof element !== \"string\") {\n    return /* @__PURE__ */ jsx(chakra.svg, { as: element, ...shared, ...rest });\n  }\n  const _path = children != null ? children : fallbackIcon.path;\n  return /* @__PURE__ */ jsx(chakra.svg, { verticalAlign: \"middle\", viewBox: _viewBox, ...shared, ...rest, children: _path });\n});\nIcon.displayName = \"Icon\";\nvar icon_default = Icon;\n\nexport {\n  Icon,\n  icon_default\n};\n","// src/Hamburger.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar HamburgerIcon = createIcon({\n  displayName: \"HamburgerIcon\",\n  viewBox: \"0 0 24 24\",\n  d: \"M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z\"\n});\n\nexport {\n  HamburgerIcon\n};\n","import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n","import { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useMenuStyles } from \"./menu\"\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useMenuStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nMenuCommand.displayName = \"MenuCommand\"\n","import { chakra, forwardRef, SystemStyleObject } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { useMenuStyles } from \"./menu\"\nimport { StyledMenuItemProps } from \"./menu-item\"\n\nexport const StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useMenuStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as || type ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = useMemo(\n      () => ({\n        textDecoration: \"none\",\n        color: \"inherit\",\n        userSelect: \"none\",\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"start\",\n        flex: \"0 0 auto\",\n        outline: 0,\n        ...styles.item,\n      }),\n      [styles.item],\n    )\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n","import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children, cloneElement, isValidElement } from \"react\"\nimport { useMenuStyles } from \"./menu\"\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const styles = useMenuStyles()\n\n  const child = Children.only(children)\n\n  const clone = isValidElement(child)\n    ? cloneElement<any>(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span className={_className} {...rest} __css={styles.icon}>\n      {clone}\n    </chakra.span>\n  )\n}\n\nMenuIcon.displayName = \"MenuIcon\"\n","import { forwardRef, HTMLChakraProps, SystemProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { MenuCommand } from \"./menu-command\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { useMenuItem, UseMenuItemProps } from \"./use-menu\"\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\n/**\n * Use prop `isDisabled` instead\n */\ntype IsDisabledProps = \"disabled\" | \"aria-disabled\"\n\nexport interface MenuItemProps\n  extends Omit<HTMLChakraProps<\"button\">, IsDisabledProps>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nMenuItem.displayName = \"MenuItem\"\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nimport { HTMLMotionProps, motion, Variants } from \"framer-motion\"\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuContext, useMenuList, useMenuPositioner } from \"./use-menu\"\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * Props for the root element that positions the menu.\n   */\n  rootProps?: HTMLChakraProps<\"div\">\n  /**\n   * The framer-motion props to animate the menu list\n   */\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst MenuTransition = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const { rootProps, motionProps, ...rest } = props\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated,\n  } = useMenuContext()\n\n  const listProps = useMenuList(rest, ref) as any\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useMenuStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <MenuTransition\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{ outline: 0, ...styles.list }}\n        {...motionProps}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        {...listProps}\n        onUpdate={onTransitionEnd}\n        onAnimationComplete={callAll(\n          animated.onComplete,\n          listProps.onAnimationComplete,\n        )}\n      />\n    </chakra.div>\n  )\n})\n\nMenuList.displayName = \"MenuList\"\n","import { dataAttr } from \"@chakra-ui/shared-utils\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useEventListeners } from \"./use-event-listeners\"\nimport { useCallback, useState } from \"react\"\n\nexport interface UseClickableProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   *\n   * @default true\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   *\n   * @default true\n   */\n  clickOnSpace?: boolean\n  /**\n   * The ref for the element\n   */\n  ref?: React.Ref<HTMLElement>\n}\n\nfunction isValidElement(event: KeyboardEvent): boolean {\n  const element = event.target as HTMLElement\n  const { tagName, isContentEditable } = element\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\n/**\n * useClickable implements all the interactions of a native `button`\n * component with support for making it focusable even if it is disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    onMouseLeave,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style its \":active\" style\n   */\n  const [isPressed, setIsPressed] = useState(false)\n\n  const listeners = useEventListeners()\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = (node: any) => {\n    if (!node) return\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const onDocumentKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      if (isPressed && isValidElement(e)) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setIsPressed(false)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (event.button !== 0) return\n      setIsPressed(false)\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (event.button !== 0) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsPressed(true)\n      }\n\n      const target = event.currentTarget as HTMLElement\n      target.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (event.button !== 0) return\n\n      if (!isButton) {\n        setIsPressed(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isPressed) {\n        event.preventDefault()\n        setIsPressed(false)\n      }\n      onMouseLeave?.(event)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n","import { useCallback, useEffect, useRef } from \"react\"\n\ninterface EventListeners {\n  add<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  add(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  remove<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  remove(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void\n}\n\nexport function useEventListeners(): EventListeners {\n  const listeners = useRef(new Map())\n  const currentListeners = listeners.current\n\n  const add = useCallback((el: any, type: any, listener: any, options: any) => {\n    listeners.current.set(listener, { type, el, options })\n    el.addEventListener(type, listener, options)\n  }, [])\n\n  const remove = useCallback(\n    (el: any, type: any, listener: any, options: any) => {\n      el.removeEventListener(type, listener, options)\n      listeners.current.delete(listener)\n    },\n    [],\n  )\n\n  useEffect(\n    () => () => {\n      currentListeners.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options)\n      })\n    },\n    [remove, currentListeners],\n  )\n\n  return { add, remove }\n}\n","import { useEffect, useLayoutEffect } from \"react\"\n\n/**\n * Sort an array of DOM nodes according to the HTML tree order\n * @see http://www.w3.org/TR/html5/infrastructure.html#tree-order\n */\nexport function sortNodes(nodes: Node[]) {\n  return nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b)\n\n    if (\n      compare & Node.DOCUMENT_POSITION_FOLLOWING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      // a < b\n      return -1\n    }\n\n    if (\n      compare & Node.DOCUMENT_POSITION_PRECEDING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINS\n    ) {\n      // a > b\n      return 1\n    }\n\n    if (\n      compare & Node.DOCUMENT_POSITION_DISCONNECTED ||\n      compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n    ) {\n      throw Error(\"Cannot sort the given nodes.\")\n    } else {\n      return 0\n    }\n  })\n}\n\nexport const isElement = (el: any): el is HTMLElement =>\n  typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE\n\nexport function getNextIndex(current: number, max: number, loop: boolean) {\n  let next = current + 1\n  if (loop && next >= max) next = 0\n  return next\n}\n\nexport function getPrevIndex(current: number, max: number, loop: boolean) {\n  let next = current - 1\n  if (loop && next < 0) next = max\n  return next\n}\n\nexport const useSafeLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n\nexport const cast = <T>(value: any) => value as T\n","import { sortNodes, isElement, getNextIndex, getPrevIndex } from \"./utils\"\n\nexport type DescendantOptions<T = {}> = T & {\n  /**\n   * If `true`, the item will be registered in all nodes map\n   * but omitted from enabled nodes map\n   */\n  disabled?: boolean\n  /**\n   * The id of the item\n   */\n  id?: string\n}\n\nexport type Descendant<T, K> = DescendantOptions<K> & {\n  /**\n   * DOM element of the item\n   */\n  node: T\n  /**\n   * index of item in all nodes map and enabled nodes map\n   */\n  index: number\n}\n\n/**\n * @internal\n *\n * Class to manage descendants and their relative indices in the DOM.\n * It uses `node.compareDocumentPosition(...)` under the hood\n */\nexport class DescendantsManager<\n  T extends HTMLElement,\n  K extends Record<string, any> = {},\n> {\n  private descendants = new Map<T, Descendant<T, K>>()\n\n  register = (nodeOrOptions: T | null | DescendantOptions<K>) => {\n    if (nodeOrOptions == null) return\n\n    if (isElement(nodeOrOptions)) {\n      return this.registerNode(nodeOrOptions)\n    }\n\n    return (node: T | null) => {\n      this.registerNode(node, nodeOrOptions)\n    }\n  }\n\n  unregister = (node: T) => {\n    this.descendants.delete(node)\n    const sorted = sortNodes(Array.from(this.descendants.keys()))\n    this.assignIndex(sorted)\n  }\n\n  destroy = () => {\n    this.descendants.clear()\n  }\n\n  private assignIndex = (descendants: Node[]) => {\n    this.descendants.forEach((descendant) => {\n      const index = descendants.indexOf(descendant.node)\n      descendant.index = index\n      descendant.node.dataset[\"index\"] = descendant.index.toString()\n    })\n  }\n\n  count = () => this.descendants.size\n\n  enabledCount = () => this.enabledValues().length\n\n  values = () => {\n    const values = Array.from(this.descendants.values())\n    return values.sort((a, b) => a.index - b.index)\n  }\n\n  enabledValues = () => {\n    return this.values().filter((descendant) => !descendant.disabled)\n  }\n\n  item = (index: number) => {\n    if (this.count() === 0) return undefined\n    return this.values()[index]\n  }\n\n  enabledItem = (index: number) => {\n    if (this.enabledCount() === 0) return undefined\n    return this.enabledValues()[index]\n  }\n\n  first = () => this.item(0)\n\n  firstEnabled = () => this.enabledItem(0)\n\n  last = () => this.item(this.descendants.size - 1)\n\n  lastEnabled = () => {\n    const lastIndex = this.enabledValues().length - 1\n    return this.enabledItem(lastIndex)\n  }\n\n  indexOf = (node: T | null) => {\n    if (!node) return -1\n    return this.descendants.get(node)?.index ?? -1\n  }\n\n  enabledIndexOf = (node: T | null) => {\n    if (node == null) return -1\n    return this.enabledValues().findIndex((i) => i.node.isSameNode(node))\n  }\n\n  next = (index: number, loop = true) => {\n    const next = getNextIndex(index, this.count(), loop)\n    return this.item(next)\n  }\n\n  nextEnabled = (index: number, loop = true) => {\n    const item = this.item(index)\n    if (!item) return\n    const enabledIndex = this.enabledIndexOf(item.node)\n    const nextEnabledIndex = getNextIndex(\n      enabledIndex,\n      this.enabledCount(),\n      loop,\n    )\n    return this.enabledItem(nextEnabledIndex)\n  }\n\n  prev = (index: number, loop = true) => {\n    const prev = getPrevIndex(index, this.count() - 1, loop)\n    return this.item(prev)\n  }\n\n  prevEnabled = (index: number, loop = true) => {\n    const item = this.item(index)\n    if (!item) return\n    const enabledIndex = this.enabledIndexOf(item.node)\n    const prevEnabledIndex = getPrevIndex(\n      enabledIndex,\n      this.enabledCount() - 1,\n      loop,\n    )\n    return this.enabledItem(prevEnabledIndex)\n  }\n\n  private registerNode = (node: T | null, options?: DescendantOptions<K>) => {\n    if (!node || this.descendants.has(node)) return\n\n    const keys = Array.from(this.descendants.keys()).concat(node)\n    const sorted = sortNodes(keys)\n\n    if (options?.disabled) {\n      options.disabled = !!options.disabled\n    }\n\n    const descendant = { node, index: -1, ...options }\n\n    this.descendants.set(node, descendant as Descendant<T, K>)\n\n    this.assignIndex(sorted)\n  }\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useRef, useState } from \"react\"\nimport { DescendantsManager, DescendantOptions } from \"./descendant\"\nimport { useSafeLayoutEffect, cast } from \"./utils\"\n\n/**\n * @internal\n * React hook that initializes the DescendantsManager\n */\nfunction useDescendants<\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>() {\n  const descendants = useRef(new DescendantsManager<T, K>())\n  useSafeLayoutEffect(() => {\n    return () => descendants.current.destroy()\n  })\n  return descendants.current\n}\n\nexport interface UseDescendantsReturn\n  extends ReturnType<typeof useDescendants> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Descendants context to be used in component-land.\n  - Mount the `DescendantsContextProvider` at the root of the component\n  - Call `useDescendantsContext` anywhere you need access to the descendants information\n\n  NB:  I recommend using `createDescendantContext` below\n * -----------------------------------------------------------------------------------------------*/\n\nconst [DescendantsContextProvider, useDescendantsContext] =\n  createContext<UseDescendantsReturn>({\n    name: \"DescendantsProvider\",\n    errorMessage:\n      \"useDescendantsContext must be used within DescendantsProvider\",\n  })\n\n/**\n * @internal\n * This hook provides information a descendant such as:\n * - Its index compared to other descendants\n * - ref callback to register the descendant\n * - Its enabled index compared to other enabled descendants\n */\nfunction useDescendant<\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>(options?: DescendantOptions<K>) {\n  const descendants = useDescendantsContext()\n  const [index, setIndex] = useState(-1)\n  const ref = useRef<T>(null)\n\n  useSafeLayoutEffect(() => {\n    return () => {\n      if (!ref.current) return\n      descendants.unregister(ref.current)\n    }\n  }, [])\n\n  useSafeLayoutEffect(() => {\n    if (!ref.current) return\n    const dataIndex = Number(ref.current.dataset[\"index\"])\n    if (index != dataIndex && !Number.isNaN(dataIndex)) {\n      setIndex(dataIndex)\n    }\n  })\n\n  const refCallback = options\n    ? cast<React.RefCallback<T>>(descendants.register(options))\n    : cast<React.RefCallback<T>>(descendants.register)\n\n  return {\n    descendants,\n    index,\n    enabledIndex: descendants.enabledIndexOf(ref.current),\n    register: mergeRefs(refCallback, ref),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Function that provides strongly typed versions of the context provider and hooks above.\n   To be used in component-land\n * -----------------------------------------------------------------------------------------------*/\n\nexport function createDescendantContext<\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>() {\n  type ContextProviderType = React.Provider<DescendantsManager<T, K>>\n  const ContextProvider = cast<ContextProviderType>(DescendantsContextProvider)\n\n  const _useDescendantsContext = () =>\n    cast<DescendantsManager<T, K>>(useDescendantsContext())\n\n  const _useDescendant = (options?: DescendantOptions<K>) =>\n    useDescendant<T, K>(options)\n\n  const _useDescendants = () => useDescendants<T, K>()\n\n  return [\n    // context provider\n    ContextProvider,\n    // call this when you need to read from context\n    _useDescendantsContext,\n    // descendants state information, to be called and passed to `ContextProvider`\n    _useDescendants,\n    // descendant index information\n    _useDescendant,\n  ] as const\n}\n","import {\n  getOwnerDocument,\n  isHTMLElement\n} from \"./chunk-3XANSPY5.mjs\";\n\n// src/tabbable.ts\nvar hasDisplayNone = (element) => window.getComputedStyle(element).display === \"none\";\nvar hasTabIndex = (element) => element.hasAttribute(\"tabindex\");\nvar hasNegativeTabIndex = (element) => hasTabIndex(element) && element.tabIndex === -1;\nfunction isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.localName === \"input\" && \"select\" in element;\n}\nfunction isActiveElement(element) {\n  const doc = isHTMLElement(element) ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction hasFocusWithin(element) {\n  if (!document.activeElement)\n    return false;\n  return element.contains(document.activeElement);\n}\nfunction isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement))\n    return true;\n  return element.hidden;\n}\nfunction isContentEditable(element) {\n  const value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n  const { localName } = element;\n  const focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0)\n    return true;\n  const others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n  if (localName in others) {\n    return others[localName]();\n  }\n  if (isContentEditable(element))\n    return true;\n  return hasTabIndex(element);\n}\nfunction isTabbable(element) {\n  if (!element)\n    return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\nexport {\n  hasDisplayNone,\n  hasTabIndex,\n  hasNegativeTabIndex,\n  isDisabled,\n  isInputElement,\n  isActiveElement,\n  hasFocusWithin,\n  isHidden,\n  isContentEditable,\n  isFocusable,\n  isTabbable\n};\n","import {\n  FocusableElement,\n  getActiveElement,\n  getAllFocusable,\n  isTabbable,\n} from \"@chakra-ui/dom-utils\"\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport type { RefObject } from \"react\"\nimport { useCallback, useRef } from \"react\"\n\nexport interface UseFocusOnHideOptions {\n  focusRef: RefObject<FocusableElement>\n  shouldFocus?: boolean\n  visible?: boolean\n}\n\nfunction preventReturnFocus(containerRef: React.RefObject<HTMLElement>) {\n  const el = containerRef.current\n  if (!el) return false\n\n  const activeElement = getActiveElement(el)\n\n  if (!activeElement) return false\n  if (el.contains(activeElement)) return false\n  if (isTabbable(activeElement)) return true\n\n  return false\n}\n\n/**\n * Popover hook to manage the focus when the popover closes or hides.\n *\n * We either want to return focus back to the popover trigger or\n * let focus proceed normally if user moved to another interactive\n * element in the viewport.\n */\nexport function useFocusOnHide(\n  containerRef: RefObject<HTMLElement>,\n  options: UseFocusOnHideOptions,\n) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options\n\n  const shouldFocus = shouldFocusProp && !visible\n\n  useUpdateEffect(() => {\n    if (!shouldFocus) return\n\n    if (preventReturnFocus(containerRef)) {\n      return\n    }\n\n    const el = focusRef?.current || containerRef.current\n\n    let rafId: number\n\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({ preventScroll: true })\n      })\n      return () => {\n        cancelAnimationFrame(rafId)\n      }\n    }\n  }, [shouldFocus, containerRef, focusRef])\n}\n\nexport interface UseFocusOnShowOptions {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nconst defaultOptions: UseFocusOnShowOptions = {\n  preventScroll: true,\n  shouldFocus: false,\n}\n\nexport function useFocusOnShow<T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  options = defaultOptions,\n) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options\n  const element = isRefObject(target) ? target.current : target\n\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue\n    }\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n    autoFocusRef.current = false\n\n    if (element.contains(document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      requestAnimationFrame(() => {\n        focusRef.current?.focus({ preventScroll })\n      })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll })\n        })\n      }\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(element, \"transitionend\", onFocus)\n}\n\nfunction isRefObject(val: any): val is { current: any } {\n  return \"current\" in val\n}\n","import { useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n","import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport { useFocusOnHide } from \"@chakra-ui/react-use-focus-effect\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  useDisclosure,\n  UseDisclosureProps,\n} from \"@chakra-ui/react-use-disclosure\"\nimport { useOutsideClick } from \"@chakra-ui/react-use-outside-click\"\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { dataAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\n\nimport React, {\n  cloneElement,\n  useCallback,\n  useRef,\n  useState,\n  useId,\n  useMemo,\n  useEffect,\n} from \"react\"\nimport { useShortcut } from \"./use-shortcut\"\nimport { getNextItemFromSearch } from \"./get-next-item-from-search\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps\n  extends Omit<UsePopperProps, \"enabled\">,\n    UseDisclosureProps {\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: React.RefObject<{ focus(): void }>\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   *\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * If `rtl`, proper placement positions will be flipped i.e. 'top-right' will\n   * become 'top-left' and vice-verse\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /*\n   * If `true`, the menu will be positioned when it mounts\n   * (even if it's not open).\n   *\n   * Note 🚨: We don't recommend using this in a menu/popover intensive UI or page\n   * as it might affect scrolling performance.\n   *\n   * @default false\n   */\n  computePositionOnMount?: boolean\n}\n\nfunction useIds(idProp?: string, ...prefixes: string[]) {\n  const reactId = useId()\n  const id = idProp || reactId\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`)\n  }, [id, prefixes])\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n\nfunction isActiveElement(element: HTMLElement) {\n  const doc = getOwnerDocument(element)\n  return doc.activeElement === (element as HTMLElement)\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    initialFocusRef,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  const focusMenu = useCallback(() => {\n    requestAnimationFrame(() => {\n      menuRef.current?.focus({ preventScroll: false })\n    })\n  }, [])\n\n  const focusFirstItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) {\n        initialFocusRef.current?.focus()\n      } else {\n        const first = descendants.firstEnabled()\n        if (first) setFocusedIndex(first.index)\n      }\n    })\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const focusLastItem = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.lastEnabled()\n      if (last) setFocusedIndex(last.index)\n    })\n    timeoutIds.current.add(id)\n  }, [descendants])\n\n  const onOpenInternal = useCallback(() => {\n    onOpenProp?.()\n    if (autoSelect) {\n      focusFirstItem()\n    } else {\n      focusMenu()\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp])\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal,\n  })\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      if (!buttonRef.current?.contains(event.target as HTMLElement)) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper: any = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction,\n  })\n\n  const [focusedIndex, setFocusedIndex] = useState(-1)\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  const animationState = useAnimationState({ isOpen, ref: menuRef })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = useCallback(() => {\n    onOpen()\n    focusMenu()\n  }, [onOpen, focusMenu])\n\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  // clean up timeouts\n  useEffect(() => {\n    const ids = timeoutIds.current\n    return () => {\n      ids.forEach((id) => clearTimeout(id))\n      ids.clear()\n    }\n  }, [])\n\n  const openAndFocusFirstItem = useCallback(() => {\n    onOpen()\n    focusFirstItem()\n  }, [focusFirstItem, onOpen])\n\n  const openAndFocusLastItem = useCallback(() => {\n    onOpen()\n    focusLastItem()\n  }, [onOpen, focusLastItem])\n\n  const refocus = useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const node = descendants.item(focusedIndex)?.node\n    node?.focus({ preventScroll: true })\n  }, [isOpen, focusedIndex, descendants])\n\n  /**\n   * Track the animation frame which is scheduled to focus\n   * a menu item, so it can be cancelled if another item\n   * is focused before the animation executes. This prevents\n   * infinite rerenders.\n   */\n  const rafId = useRef<number | null>(null)\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n    initialFocusRef,\n    rafId,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(target: EventTarget | null) {\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return (\n    isHTMLElement(target) &&\n    !!target?.getAttribute(\"role\")?.startsWith(\"menuitem\")\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n): React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n    unstable__animationState: animated,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) =>\n      event.key !== \" \" && isTargetMenuItem(event.target),\n  })\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      // ignore events bubbles from portal children\n      if (!event.currentTarget.contains(event.target as Element)) return\n\n      const eventKey = event.key\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event)\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\" | \"disabled\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n  /**\n   * The type of the menuitem.\n   */\n  type?: React.ButtonHTMLAttributes<HTMLButtonElement>[\"type\"]\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    onFocus: onFocusProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    type: typeProp,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n    rafId,\n  } = menu\n\n  const ref = useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = useCallback(\n    (event: any) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = useCallback(\n    (event: any) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = useCallback(\n    (event: any) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event.currentTarget)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const onFocus = useCallback(\n    (event: React.FocusEvent) => {\n      onFocusProp?.(event)\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, onFocusProp, index],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      // Cancel any pending animations\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n      rafId.current = requestAnimationFrame(() => {\n        ref.current?.focus({ preventScroll: true })\n        rafId.current = null\n      })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({ preventScroll: true })\n    }\n\n    return () => {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    type: typeProp ?? (clickableProps as any).type,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends Omit<UseMenuItemProps, \"type\">,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...rest } = props\n  const ownProps = useMenuItem(rest, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && typeof value === \"string\") {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && Array.isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? value.filter((item) => item !== selectedValue)\n          : value.concat(selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n\nfunction isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) return false\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nfunction isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\"\nimport { getOwnerWindow } from \"@chakra-ui/dom-utils\"\nexport type UseAnimationStateProps = {\n  isOpen: boolean\n  ref: React.RefObject<HTMLElement>\n}\n\nexport function useAnimationState(props: UseAnimationStateProps) {\n  const { isOpen, ref } = props\n\n  const [mounted, setMounted] = useState(isOpen)\n  const [once, setOnce] = useState(false)\n\n  useEffect(() => {\n    if (!once) {\n      setMounted(isOpen)\n      setOnce(true)\n    }\n  }, [isOpen, once, mounted])\n\n  useEventListener(\n    () => ref.current,\n    \"animationend\",\n    () => {\n      setMounted(isOpen)\n    },\n  )\n\n  const hidden = isOpen ? false : !mounted\n\n  return {\n    present: !hidden,\n    onComplete() {\n      const win = getOwnerWindow(ref.current)\n      const evt = new win.CustomEvent(\"animationend\", { bubbles: true })\n      ref.current?.dispatchEvent(evt)\n    },\n  }\n}\n","import { useEffect, useRef, useState } from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = useState<string[]>([])\n  const timeoutRef = useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n","/**\n * Gets the next item based on a search string\n *\n * @param items array of items\n * @param searchString the search string\n * @param itemToString resolves an item to string\n * @param currentItem the current selected item\n */\nexport function getNextItemFromSearch<T>(\n  items: T[],\n  searchString: string,\n  itemToString: (item: T) => string,\n  currentItem: T,\n): T | undefined {\n  if (searchString == null) {\n    return currentItem\n  }\n\n  // If current item doesn't exist, find the item that matches the search string\n  if (!currentItem) {\n    const foundItem = items.find((item) =>\n      itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()),\n    )\n    return foundItem\n  }\n\n  // Filter items for ones that match the search string (case insensitive)\n  const matchingItems = items.filter((item) =>\n    itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()),\n  )\n\n  // If there's a match, let's get the next item to select\n  if (matchingItems.length > 0) {\n    let nextIndex: number\n\n    // If the currentItem is in the available items, we move to the next available option\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem)\n      nextIndex = currentIndex + 1\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0\n      }\n      return matchingItems[nextIndex]\n    }\n    // Else, we pick the first item in the available items\n    nextIndex = items.indexOf(matchingItems[0])\n    return items[nextIndex]\n  }\n\n  // a decent fallback to the currentItem\n  return currentItem\n}\n","// src/index.ts\nfunction lazyDisclosure(options) {\n  const { wasSelected, enabled, isSelected, mode = \"unmount\" } = options;\n  if (!enabled)\n    return true;\n  if (isSelected)\n    return true;\n  if (mode === \"keepMounted\" && wasSelected)\n    return true;\n  return false;\n}\nexport {\n  lazyDisclosure\n};\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  UseMenuProps,\n} from \"./use-menu\"\n\nconst [MenuStylesProvider, useMenuStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `,\n})\n\nexport { useMenuStyles }\n\ntype MaybeRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode)\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n *\n * @see Docs https://chakra-ui.com/docs/components/menu\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction })\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <MenuStylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </MenuStylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nMenu.displayName = \"Menu\"\n","import { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuButton } from \"./use-menu\"\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useMenuStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n *\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{ pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 }}\n        >\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nMenuButton.displayName = \"MenuButton\"\n"],"names":["IconButton","forwardRef","props","ref","icon","children","isRound","ariaLabel","rest","element","_children","isValidElement","cloneElement","focusable","Button","padding","borderRadius","displayName","fallbackIcon","path","jsxs","stroke","strokeWidth","jsx","strokeLinecap","fill","d","strokeMiterlimit","cx","cy","r","viewBox","Icon","as","color","className","__css","shared","w","h","display","lineHeight","flexShrink","useStyleConfig","_viewBox","chakra","_path","verticalAlign","HamburgerIcon","options","pathDefinition","defaultProps","Children","Comp","length","createIcon","VStack","Stack","align","direction","MenuCommand","styles","useMenuStyles","command","StyledMenuItem","type","btnType","buttonStyles","useMemo","textDecoration","userSelect","width","alignItems","textAlign","flex","outline","item","MenuIcon","child","clone","_className","MenuItem","iconSpacing","commandSpacing","menuitemProps","useMenuItem","style","pointerEvents","fontSize","marginEnd","marginStart","motionVariants","enter","visibility","opacity","scale","transition","duration","ease","exit","transitionEnd","easings","MenuTransition","motion","MenuList","rootProps","motionProps","isOpen","onTransitionEnd","unstable__animationState","animated","useMenuContext","listProps","useMenuList","positionerProps","useMenuPositioner","zIndex","_b","_a","list","variants","initial","animate","onUpdate","onAnimationComplete","callAll","onComplete","event","target","tagName","isContentEditable","useClickable","htmlRef","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndex","tabIndexProp","onMouseOver","onMouseLeave","htmlProps","isButton","setIsButton","useState","isPressed","setIsPressed","listeners","useRef","Map","currentListeners","current","add","useCallback","el","listener","set","addEventListener","remove","removeEventListener","delete","useEffect","forEach","value","key","useEventListeners","trulyDisabled","handleClick","stopPropagation","preventDefault","currentTarget","focus","onDocumentKeyUp","e","document","handleKeyDown","defaultPrevented","metaKey","nativeEvent","shouldClickOnEnter","click","handleKeyUp","onDocumentMouseUp","button","handleMouseDown","preventScroll","handleMouseUp","handleMouseOver","handleMouseLeave","mergeRefs","node","disabled","role","dataAttr","sortNodes","nodes","sort","a","b","compare","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_DISCONNECTED","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","Error","getNextIndex","max","loop","next","getPrevIndex","useSafeLayoutEffect","window","useLayoutEffect","cast","DescendantsManager","constructor","__publicField","nodeOrOptions","nodeType","ELEMENT_NODE","this","registerNode","descendants","sorted","Array","from","keys","assignIndex","clear","descendant","index","indexOf","dataset","toString","size","enabledValues","values","filter","count","enabledCount","enabledItem","lastIndex","get","findIndex","i","isSameNode","nextEnabledIndex","enabledIndexOf","prev","prevEnabledIndex","has","concat","DescendantsContextProvider","useDescendantsContext","createContext","name","errorMessage","hasTabIndex","hasAttribute","hasNegativeTabIndex","isHidden","parentElement","hidden","isHTMLElement","Boolean","getAttribute","localName","others","audio","video","preventReturnFocus","containerRef","activeElement","getActiveElement","contains","isValidEvent","getOwnerDocument","ownerDocument","MenuDescendantsProvider","useMenuDescendantsContext","useMenuDescendants","useMenuDescendant","destroy","useDescendants","setIndex","unregister","dataIndex","Number","isNaN","refCallback","register","enabledIndex","useDescendant","MenuProvider","strict","isActiveElement","useMenu","id","closeOnSelect","closeOnBlur","initialFocusRef","autoSelect","isLazy","isOpenProp","defaultIsOpen","onClose","onCloseProp","onOpen","onOpenProp","placement","lazyBehavior","computePositionOnMount","popperProps","menuRef","buttonRef","focusMenu","requestAnimationFrame","focusFirstItem","setTimeout","first","firstEnabled","setFocusedIndex","timeoutIds","focusLastItem","last","lastEnabled","onOpenInternal","onToggle","useDisclosure","handler","enabled","savedHandler","useCallbackRef","state","isPointerDown","ignoreEmulatedMouseEvents","onPointerDown","onTouchEnd","doc","useOutsideClick","popper","usePopper","focusedIndex","useUpdateEffect","shouldFocus","shouldFocusProp","visible","focusRef","rafId","cancelAnimationFrame","useFocusOnHide","animationState","mounted","setMounted","once","setOnce","useEventListener","present","evt","getOwnerWindow","CustomEvent","bubbles","dispatchEvent","useAnimationState","buttonId","menuId","idProp","prefixes","reactId","useId","map","prefix","useIds","openAndFocusMenu","Set","ids","clearTimeout","openAndFocusFirstItem","openAndFocusLastItem","refocus","hasFocusWithin","forceUpdate","orientation","useMenuButton","externalRef","menu","eventKey","action","Enter","ArrowDown","ArrowUp","referenceRef","callAllHandlers","isTargetMenuItem","isElement","win","defaultView","HTMLElement","startsWith","createTypeaheadHandler","timeout","setKeys","timeoutRef","flush","clearKeysAfterDelay","fn","keysCopy","pop","test","isPrintableCharacter","join","useShortcut","Tab","Escape","nextEnabled","prevEnabled","onTypeahead","character","nextItem","items","searchString","itemToString","currentItem","find","toLowerCase","matchingItems","nextIndex","includes","getNextItemFromSearch","textContent","hasBeenOpened","shouldRenderChildren","wasSelected","isSelected","mode","lazyDisclosure","transformOrigin","getPopperProps","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeaveProp","onClickProp","onFocus","onFocusProp","typeProp","menuCloseOnSelect","isFocused","clickableProps","MenuStylesProvider","Menu","useMultiStyleConfig","ownProps","omitThemingProps","useTheme","ctx","context","StyledMenuButton","appearance","MenuButton","As","buttonProps","Element","minW"],"sourceRoot":""}