{"version":3,"file":"static/js/953.dfdec0c2.chunk.js","mappings":"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","sources":["components/Carousal/Carousal.jsx","components/Projects/MediumProjectCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box, IconButton, useBreakpointValue } from \"@chakra-ui/react\";\r\nimport { BiLeftArrowAlt, BiRightArrowAlt } from \"react-icons/bi\";\r\nimport Slider from \"react-slick\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nconst settings = {\r\n  dots: true,\r\n  arrows: false,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 500,\r\n  autoplaySpeed: 3000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default function Carousel({ image }) {\r\n  const [slider, setSlider] = React.useState(null);\r\n  const top = useBreakpointValue({ base: \"90%\", md: \"50%\" });\r\n  const side = useBreakpointValue({ base: \"30%\", md: \"10px\" });\r\n  return (\r\n    <Box m=\"auto\" position={\"relative\"} width={\"full\"} overflow={\"hidden\"}>\r\n      <link\r\n        rel=\"stylesheet\"\r\n        type=\"text/css\"\r\n        charSet=\"UTF-8\"\r\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\r\n      />\r\n      <link\r\n        rel=\"stylesheet\"\r\n        type=\"text/css\"\r\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\r\n      />\r\n\r\n      <IconButton\r\n        aria-label=\"left-arrow\"\r\n        bg=\"blackAlpha.400\"\r\n        borderRadius=\"full\"\r\n        position=\"absolute\"\r\n        left={side}\r\n        top={top}\r\n        transform={\"translate(0%, -80%)\"}\r\n        zIndex={1}\r\n        onClick={() => slider?.slickPrev()}\r\n      >\r\n        <BiLeftArrowAlt />\r\n      </IconButton>\r\n      {/* Right Icon */}\r\n      <IconButton\r\n        aria-label=\"right-arrow\"\r\n        bg=\"blackAlpha.400\"\r\n        borderRadius=\"full\"\r\n        position=\"absolute\"\r\n        right={side}\r\n        top={top}\r\n        transform={\"translate(0%, -80%)\"}\r\n        zIndex={1}\r\n        onClick={() => slider?.slickNext()}\r\n      >\r\n        <BiRightArrowAlt />\r\n      </IconButton>\r\n      {/* Slider */}\r\n      <Slider {...settings} ref={(slider) => setSlider(slider)}>\r\n        {image.map((url, index) => (\r\n          <LazyLoadImage src={url} key={index} effect=\"blur\" />\r\n        ))}\r\n      </Slider>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  Stack,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { RxGithubLogo } from \"react-icons/rx\";\r\nimport { HiExternalLink } from \"react-icons/hi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport Carousel from \"../Carousal/Carousal\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction MediumProjectCard({\r\n  image,\r\n  deployedLink,\r\n  GithubLink,\r\n  subTitle,\r\n  title,\r\n  description,\r\n  techStack,\r\n}) {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: 20 }}\r\n      transition={{ duration: 0.5 }}\r\n      whileHover={{ scale: 1.03 }}\r\n    >\r\n      <Stack\r\n        borderRadius={\"10px\"}\r\n        background={colorMode === \"light\" ? \"white\" : \"black\"}\r\n        boxShadow={\"rgba(0, 0, 0, 0.35) 0px 5px 15px;\"}\r\n        w={\"100%\"}\r\n        mb={\"30px\"}\r\n        p={\"5\"}\r\n      >\r\n        <Box w={\"100%\"} className=\"project-card\">\r\n          <Heading\r\n            fontSize={{\r\n              sm: \"20px\",\r\n              md: \"30px\",\r\n              lg: \"40px\",\r\n              xl: \"54px\",\r\n              \"2xl\": \"64px\",\r\n            }}\r\n            mb={\"20px\"}\r\n            className=\"project-title\"\r\n          >\r\n            {title} â€” {subTitle}\r\n          </Heading>\r\n          <Box w={\"100%\"} mb={\"10px\"}>\r\n            <Carousel image={image} />\r\n          </Box>\r\n          <Grid\r\n            templateColumns={{\r\n              sm: \"repeat(1,1fr)\",\r\n              md: \"repeat(1,1fr)\",\r\n            }}\r\n          >\r\n            <Box\r\n              pr={{\r\n                base: \"0\",\r\n                md: \"9\",\r\n              }}\r\n            >\r\n              <Text as=\"b\">Description</Text>\r\n              <Text mb={\"20px\"} className=\"project-description\">\r\n                {description}\r\n              </Text>\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            templateColumns={{\r\n              sm: \"repeat(1,1fr)\",\r\n              md: \"70% 30%\",\r\n            }}\r\n            alignItems={\"baseline\"}\r\n          >\r\n            <Flex flexDir={{ base: \"column\", sm: \"row\" }}>\r\n              <Text fontWeight=\"bold\">Tech Stack:</Text>\r\n              <Flex\r\n                maxW={{ base: \"100%\", sm: \"80%\" }}\r\n                justifyContent={\"space-around\"}\r\n                mb={\"20px\"}\r\n                flexWrap={\"wrap\"}\r\n                align={\"center\"}\r\n              >\r\n                {techStack.map((item) => {\r\n                  return (\r\n                    <Box className=\"project-tech-stack\" ml={\"5px\"} key={item}>\r\n                      <Badge\r\n                        colorScheme={colorMode === \"light\" ? \"blue\" : \"red\"}\r\n                      >\r\n                        #{item}\r\n                      </Badge>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Flex>\r\n            </Flex>\r\n            <Flex w={\"100%\"}>\r\n              <Link\r\n                to={deployedLink}\r\n                className=\"project-deployed-link\"\r\n                target=\"_blank\"\r\n              >\r\n                <Text as=\"b\" textDecorationLine={\"underline\"}>\r\n                  Website\r\n                </Text>\r\n              </Link>\r\n              <Link\r\n                to={GithubLink}\r\n                className=\"project-github-link\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button\r\n                  ml={\"20px\"}\r\n                  bgColor={colorMode === \"light\" ? \"black\" : \"red\"}\r\n                  color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n                >\r\n                  <RxGithubLogo />\r\n                  <Box as=\"span\" ml={\"10px\"}>\r\n                    Github\r\n                  </Box>\r\n                  <HiExternalLink />\r\n                </Button>\r\n              </Link>\r\n            </Flex>\r\n          </Grid>\r\n        </Box>\r\n      </Stack>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default MediumProjectCard;\r\n"],"names":["settings","dots","arrows","fade","infinite","autoplay","speed","autoplaySpeed","slidesToShow","slidesToScroll","Carousel","image","slider","setSlider","React","top","useBreakpointValue","base","md","side","m","position","width","overflow","rel","type","charSet","href","bg","borderRadius","left","transform","zIndex","onClick","slickPrev","right","slickNext","ref","map","url","index","LazyLoadImage","src","effect","deployedLink","GithubLink","subTitle","title","description","techStack","colorMode","useColorMode","initial","opacity","y","animate","exit","transition","duration","whileHover","scale","background","boxShadow","w","mb","p","className","fontSize","sm","lg","xl","templateColumns","pr","as","alignItems","flexDir","fontWeight","maxW","justifyContent","flexWrap","align","item","ml","colorScheme","to","target","textDecorationLine","bgColor","color"],"sourceRoot":""}